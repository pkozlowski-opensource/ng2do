{"version":3,"sources":["shadow_dom_strategy.js","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/src/core/compiler/shadow_dom_strategy.js","sourceRoot":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/src/core/compiler/","sourcesContent":["import {Type, isBlank, isPresent, int} from 'angular2/src/facade/lang';\nimport {DOM, Element, StyleElement} from 'angular2/src/facade/dom';\nimport {List, ListWrapper, MapWrapper, Map} from 'angular2/src/facade/collection';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\n\nimport {View} from './view';\n\nimport {Content} from './shadow_dom_emulation/content_tag';\nimport {LightDom} from './shadow_dom_emulation/light_dom';\nimport {ShadowCss} from './shadow_dom_emulation/shadow_css';\n\nimport {StyleInliner} from './style_inliner';\nimport {StyleUrlResolver} from './style_url_resolver';\n\nexport class ShadowDomStrategy {\n  attachTemplate(el:Element, view:View) {}\n  constructLightDom(lightDomView:View, shadowDomView:View, el:Element) {}\n  polyfillDirectives():List<Type> { return null; }\n  // TODO(vicb): union types: return either a string or a Promise<string>\n  transformStyleText(cssText: string, baseUrl: string, component: Type) {}\n  handleStyleElement(styleEl: StyleElement) {};\n  shimContentElement(component: Type, element: Element) {}\n  shimHostElement(component: Type, element: Element) {}\n}\n\nexport class EmulatedShadowDomStrategy extends ShadowDomStrategy {\n  _styleInliner: StyleInliner;\n  _styleUrlResolver: StyleUrlResolver;\n  _styleHost: Element;\n  _lastInsertedStyle: StyleElement;\n\n  constructor(styleInliner: StyleInliner, styleUrlResolver: StyleUrlResolver, styleHost: Element) {\n    super();\n    this._styleInliner = styleInliner;\n    this._styleUrlResolver = styleUrlResolver;\n    this._styleHost = styleHost;\n  }\n\n  attachTemplate(el:Element, view:View){\n    DOM.clearNodes(el);\n    _moveViewNodesIntoParent(el, view);\n  }\n\n  constructLightDom(lightDomView:View, shadowDomView:View, el:Element){\n    return new LightDom(lightDomView, shadowDomView, el);\n  }\n\n  polyfillDirectives():List<Type> {\n    return [Content];\n  }\n\n  transformStyleText(cssText: string, baseUrl: string, component: Type) {\n    cssText = this._styleUrlResolver.resolveUrls(cssText, baseUrl);\n    var css = this._styleInliner.inlineImports(cssText, baseUrl);\n    if (PromiseWrapper.isPromise(css)) {\n      return css.then((css) => _shimCssForComponent(css, component));\n    } else {\n      return _shimCssForComponent(css, component);\n    }\n  }\n\n  handleStyleElement(styleEl: StyleElement) {\n    DOM.remove(styleEl);\n    this._insertStyleElement(this._styleHost, styleEl);\n  };\n\n  shimContentElement(component: Type, element: Element) {\n    var id = _getComponentId(component);\n    var attrName = _getContentAttribute(id);\n    DOM.setAttribute(element, attrName, '');\n  }\n\n  shimHostElement(component: Type, element: Element) {\n    var id = _getComponentId(component);\n    var attrName = _getHostAttribute(id);\n    DOM.setAttribute(element, attrName, '');\n  }\n\n  _insertStyleElement(host: Element, style: StyleElement) {\n    if (isBlank(this._lastInsertedStyle)) {\n      var firstChild = DOM.firstChild(host);\n      if (isPresent(firstChild)) {\n        DOM.insertBefore(firstChild, style);\n      } else {\n        DOM.appendChild(host, style);\n      }\n    } else {\n      DOM.insertAfter(this._lastInsertedStyle, style);\n    }\n    this._lastInsertedStyle = style;\n  }\n}\n\nexport class NativeShadowDomStrategy extends ShadowDomStrategy {\n  _styleUrlResolver: StyleUrlResolver;\n\n  constructor(styleUrlResolver: StyleUrlResolver) {\n    super();\n    this._styleUrlResolver = styleUrlResolver;\n  }\n\n  attachTemplate(el:Element, view:View){\n    _moveViewNodesIntoParent(DOM.createShadowRoot(el), view);\n  }\n\n  constructLightDom(lightDomView:View, shadowDomView:View, el:Element){\n    return null;\n  }\n\n  polyfillDirectives():List<Type> {\n    return [];\n  }\n\n  transformStyleText(cssText: string, baseUrl: string, component: Type) {\n    return this._styleUrlResolver.resolveUrls(cssText, baseUrl);\n  }\n}\n\nfunction _moveViewNodesIntoParent(parent, view) {\n  for (var i = 0; i < view.nodes.length; ++i) {\n    DOM.appendChild(parent, view.nodes[i]);\n  }\n}\n\nvar _componentUIDs: Map<Type, int> = MapWrapper.create();\nvar _nextComponentUID: int = 0;\n\nfunction _getComponentId(component: Type) {\n  var id = MapWrapper.get(_componentUIDs, component);\n  if (isBlank(id)) {\n    id = _nextComponentUID++;\n    MapWrapper.set(_componentUIDs, component, id);\n  }\n  return id;\n}\n\n// Return the attribute to be added to the component\nfunction _getHostAttribute(id: int) {\n  return `_nghost-${id}`;\n}\n\n// Returns the attribute to be added on every single nodes in the component\nfunction _getContentAttribute(id: int) {\n  return `_ngcontent-${id}`;\n}\n\nfunction _shimCssForComponent(cssText: string, component: Type): string {\n  var id = _getComponentId(component);\n  var shadowCss = new ShadowCss();\n  return shadowCss.shimCssText(cssText, _getContentAttribute(id), _getHostAttribute(id));\n}\n\n// Reset the component cache - used for tests only\nexport function resetShadowDomCache() {\n  MapWrapper.clear(_componentUIDs);\n  _nextComponentUID = 0;\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}