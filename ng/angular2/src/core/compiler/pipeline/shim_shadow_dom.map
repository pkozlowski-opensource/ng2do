{"version":3,"sources":["shim_shadow_dom.js","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA,KAAO,EAAC,WAAU,CAAC,KAAO,iBAAe,CAAC;AAC1C,KAAO,EAAC,cAAa,CAAC,KAAO,oBAAkB,CAAC;AAChD,KAAO,EAAC,cAAa,CAAC,KAAO,oBAAkB,CAAC;AAEhD,KAAO,EAAC,SAAQ;AAAG,KAAG,CAAC,KAAO,2BAAyB,CAAC;AAExD,KAAO,EAAC,iBAAgB,CAAC,KAAO,gDAA8C,CAAC;AAC/E,KAAO,EAAC,iBAAgB,CAAC,KAAO,iDAA+C,CAAC;AAEhF,KAAO,MAAM,cAAY,QAAU,YAAU;AAC3C,AAGA,YAAU,CAAE,WAAU,AAAmB,CAAG,CAAA,QAAO,AAAmB,CAAG;AACvE,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,UAAU,EAAI,SAAO,CAAC;AACzB,OAAG,WAAW,EAAI,CAAA,WAAU,KAAK,CAAC;EACpC;AAAA,AAEA,QAAM,CAAE,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG;AAC7E,OAAI,OAAM,eAAe,CAAG;AAC1B,aAAM;IACR;AAAA,AAGA,OAAG,UAAU,mBAAmB,AAAC,CAAC,IAAG,WAAW,CAAG,CAAA,OAAM,QAAQ,CAAC,CAAC;AAGnE,AAAI,MAAA,CAAA,IAAG,EAAI,CAAA,OAAM,mBAAmB,CAAC;AACrC,OAAI,SAAQ,AAAC,CAAC,IAAG,CAAC,CAAG;AACnB,SAAG,UAAU,gBAAgB,AAAC,CAAC,IAAG,KAAK,CAAG,CAAA,OAAM,QAAQ,CAAC,CAAC;IAC5D;AAAA,EACF;AAAA,AACF;AAAA,ACjCA,KAAK,eAAe,AAAC,6BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDYC,iBAAgB,IAAa,iBAAgB,GCZvB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,+CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDkBT,cAAa,IAAW,cAAa,IAAW,cAAa,GClB7B;EAAC,CAAC,CAAC,CAAC;ADkCrD","file":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/src/core/compiler/pipeline/shim_shadow_dom.js","sourceRoot":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/src/core/compiler/pipeline/","sourcesContent":["import {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\n\nimport {isPresent, Type} from 'angular2/src/facade/lang';\n\nimport {DirectiveMetadata} from 'angular2/src/core/compiler/directive_metadata';\nimport {ShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\n\nexport class ShimShadowDom extends CompileStep {\n  _strategy: ShadowDomStrategy;\n  _component: Type;\n\n  constructor(cmpMetadata: DirectiveMetadata, strategy: ShadowDomStrategy) {\n    super();\n    this._strategy = strategy;\n    this._component = cmpMetadata.type;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    if (current.ignoreBindings) {\n      return;\n    }\n\n    // Shim the element as a child of the compiled component\n    this._strategy.shimContentElement(this._component, current.element);\n\n    // If the current element is also a component, shim it as a host\n    var host = current.componentDirective;\n    if (isPresent(host)) {\n      this._strategy.shimHostElement(host.type, current.element);\n    }\n  }\n}\n\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}