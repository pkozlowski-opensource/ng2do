{"version":3,"sources":["url_resolver.js","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ;AAAG,QAAM;AAAG,cAAY;AAAG,cAAY,CAAC,KAAO,2BAAyB,CAAC;AACzF,KAAO,EAAC,GAAE;AAAG,cAAY,CAAC,KAAO,0BAAwB,CAAC;AAE1D,KAAO,MAAM,YAAU;AACrB,AAEA,YAAU,CAAE,AAAD,CAAG;AACZ,OAAI,OAAM,AAAC,CAAC,WAAU,EAAE,CAAC,CAAG;AAC1B,gBAAU,EAAE,EAAI,CAAA,GAAE,cAAc,AAAC,CAAC,GAAE,CAAC,CAAC;IACxC;AAAA,EACF;AAAA,AAEA,QAAM,CAAE,OAAM,AAAQ,CAAG,CAAA,GAAE,AAAQ,CAAW;AAC5C,OAAI,OAAM,AAAC,CAAC,OAAM,CAAC,CAAG;AACpB,gBAAU,EAAE,KAAK,EAAI,IAAE,CAAC;AACxB,WAAO,CAAA,WAAU,EAAE,KAAK,CAAC;IAC3B;AAAA,AAEA,OAAI,OAAM,AAAC,CAAC,GAAE,CAAC,CAAA,EAAK,CAAA,GAAE,GAAK,GAAC;AAAG,WAAO,QAAM,CAAC;AAAA,AAE7C,OAAI,GAAE,CAAE,CAAA,CAAC,GAAK,IAAE,CAAG;AACjB,UAAM,IAAI,cAAY,AAAC,CAAC,6BAA6B,GAAE,SAAU,OAAM,EAAE,CAAC,CAAC;IAC7E;AAAA,AAEI,MAAA,CAAA,CAAA,EAAI,CAAA,aAAY,WAAW,AAAC,CAAC,SAAQ,CAAG,IAAE,CAAC,CAAC;AAEhD,OAAI,SAAQ,AAAC,CAAC,CAAA,CAAE,CAAA,CAAC,CAAC,CAAG;AACnB,WAAO,IAAE,CAAC;IACZ;AAAA,AAEA,cAAU,EAAE,KAAK,EAAI,CAAA,OAAM,EAAI,OAAK,CAAA,CAAI,IAAE,CAAC;AAC3C,SAAO,CAAA,WAAU,EAAE,KAAK,CAAC;EAC3B;AAAA,AACF;AAAA,ACjCA,KAAK,eAAe,AAAC,6CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,WAAV,MAAK,KAAK,UDCuC;EAAC,CAAC,CAAC,CAAC;ADkCrD,AAAI,EAAA,CAAA,SAAQ,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,eAAc,CAAC,CAAC;AACrD","file":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/src/core/compiler/url_resolver.js","sourceRoot":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/src/core/compiler/","sourcesContent":["import {isPresent, isBlank, RegExpWrapper, BaseException} from 'angular2/src/facade/lang';\nimport {DOM, AnchorElement} from 'angular2/src/facade/dom';\n\nexport class UrlResolver {\n  static a: AnchorElement;\n\n  constructor() {\n    if (isBlank(UrlResolver.a)) {\n      UrlResolver.a = DOM.createElement('a');\n    }\n  }\n\n  resolve(baseUrl: string, url: string): string {\n    if (isBlank(baseUrl)) {\n      UrlResolver.a.href = url;\n      return UrlResolver.a.href;\n    }\n\n    if (isBlank(url) || url == '') return baseUrl;\n\n    if (url[0] == '/') {\n      throw new BaseException(`Could not resolve the url ${url} from ${baseUrl}`);\n    }\n\n    var m = RegExpWrapper.firstMatch(_schemeRe, url);\n\n    if (isPresent(m[1])) {\n      return url;\n    }\n\n    UrlResolver.a.href = baseUrl + '/../' + url;\n    return UrlResolver.a.href;\n  }\n}\n\nvar _schemeRe = RegExpWrapper.create('^([^:/?#]+:)?');\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}