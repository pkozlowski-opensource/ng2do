{"version":3,"sources":["shadow_dom_strategy_spec.js","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/test/core/compiler/shadow_dom_strategy_spec.js","sourceRoot":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/test/core/compiler/","sourcesContent":["import {describe, beforeEach, it, expect, ddescribe, iit, SpyObject, el} from 'angular2/test_lib';\n\nimport {\n  NativeShadowDomStrategy,\n  EmulatedShadowDomStrategy,\n  resetShadowDomCache,\n} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/core/compiler/style_inliner';\nimport {ProtoView} from 'angular2/src/core/compiler/view';\nimport {XHR} from 'angular2/src/core/compiler/xhr/xhr';\n\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/facade/dom';\nimport {Map, MapWrapper} from 'angular2/src/facade/collection';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\n\nimport {DynamicProtoChangeDetector} from 'angular2/change_detection';\n\nexport function main() {\n  var strategy;\n\n  describe('NativeShadowDomStratgey', () => {\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      strategy = new NativeShadowDomStrategy(styleUrlResolver);\n    });\n\n    it('should attach the view nodes to the shadow root', () => {\n      var host = el('<div></div>');\n      var nodes = el('<div>view</div>');\n      var pv = new ProtoView(nodes, new DynamicProtoChangeDetector(null), null);\n      var view = pv.instantiate(null, null);\n\n      strategy.attachTemplate(host, view);\n      var shadowRoot = DOM.getShadowRoot(host);\n      expect(isPresent(shadowRoot)).toBeTruthy();\n      expect(shadowRoot).toHaveText('view');\n    });\n\n    it('should rewrite style urls', () => {\n      var css = '.foo {background-image: url(\"img.jpg\");}';\n      expect(strategy.transformStyleText(css, 'http://base', null))\n        .toEqual(\".foo {background-image: url('http://base/img.jpg');}\");\n    });\n\n    it('should not inline import rules', () => {\n      var css = '@import \"other.css\";';\n      expect(strategy.transformStyleText(css, 'http://base', null))\n        .toEqual(\"@import 'http://base/other.css';\");\n    });\n  });\n\n  describe('EmulatedShadowDomStratgey', () => {\n    var xhr, styleHost;\n\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      xhr = new FakeXHR();\n      var styleInliner = new StyleInliner(xhr, styleUrlResolver, urlResolver);\n      styleHost = el('<div></div>');\n      strategy = new EmulatedShadowDomStrategy(styleInliner, styleUrlResolver, styleHost);\n      resetShadowDomCache();\n    });\n\n    it('should attach the view nodes as child of the host element', () => {\n      var host = el('<div><span>original content</span></div>');\n      var nodes = el('<div>view</div>');\n      var pv = new ProtoView(nodes, new DynamicProtoChangeDetector(null), null);\n      var view = pv.instantiate(null, null);\n\n      strategy.attachTemplate(host, view);\n      var firstChild = DOM.firstChild(host);\n      expect(DOM.tagName(firstChild)).toEqual('DIV');\n      expect(firstChild).toHaveText('view');\n      expect(host).toHaveText('view');\n    });\n\n    it('should rewrite style urls', () => {\n      var css = '.foo {background-image: url(\"img.jpg\");}';\n      expect(strategy.transformStyleText(css, 'http://base', SomeComponent))\n        .toEqual(\".foo[_ngcontent-0] {\\nbackground-image: url(http://base/img.jpg);\\n}\");\n    });\n\n    it('should scope style', () => {\n      var css = '.foo {} :host {}';\n      expect(strategy.transformStyleText(css, 'http://base', SomeComponent))\n        .toEqual(\".foo[_ngcontent-0] {\\n\\n}\\n\\n[_nghost-0] {\\n\\n}\");\n    });\n\n    it('should inline @import rules', (done) => {\n      xhr.reply('http://base/one.css', '.one {}');\n      var css = '@import \"one.css\";';\n      var promise = strategy.transformStyleText(css, 'http://base', SomeComponent);\n      expect(promise).toBePromise();\n      promise.then((css) => {\n        expect(css).toEqual('.one[_ngcontent-0] {\\n\\n}');\n        done();\n      });\n    });\n\n    it('should return the same style given the same component', () => {\n      var css = '.foo {} :host {}';\n      expect(strategy.transformStyleText(css, 'http://base', SomeComponent))\n        .toEqual(\".foo[_ngcontent-0] {\\n\\n}\\n\\n[_nghost-0] {\\n\\n}\");\n      expect(strategy.transformStyleText(css, 'http://base', SomeComponent))\n        .toEqual(\".foo[_ngcontent-0] {\\n\\n}\\n\\n[_nghost-0] {\\n\\n}\");\n    });\n\n    it('should return different styles given different components', () => {\n      var css = '.foo {} :host {}';\n      expect(strategy.transformStyleText(css, 'http://base', SomeComponent))\n        .toEqual(\".foo[_ngcontent-0] {\\n\\n}\\n\\n[_nghost-0] {\\n\\n}\");\n      expect(strategy.transformStyleText(css, 'http://base', SomeOtherComponent))\n        .toEqual(\".foo[_ngcontent-1] {\\n\\n}\\n\\n[_nghost-1] {\\n\\n}\");\n    });\n\n    it('should move the style element to the style host', () => {\n      var originalHost = el('<div></div>');\n      var styleEl = el('<style>/*css*/</style>');\n      DOM.appendChild(originalHost, styleEl);\n      expect(originalHost).toHaveText('/*css*/');\n\n      strategy.handleStyleElement(styleEl);\n      expect(originalHost).toHaveText('');\n      expect(styleHost).toHaveText('/*css*/');\n    });\n\n    it('should add an attribute to the content elements', () => {\n      var elt = el('<div></div>');\n      strategy.shimContentElement(SomeComponent, elt);\n      expect(DOM.getAttribute(elt, '_ngcontent-0')).toEqual('');\n    });\n\n    it('should add an attribute to the host elements', () => {\n      var elt = el('<div></div>');\n      strategy.shimHostElement(SomeComponent, elt);\n      expect(DOM.getAttribute(elt, '_nghost-0')).toEqual('');\n    });\n  });\n}\n\nclass FakeXHR extends XHR {\n  _responses: Map;\n\n  constructor() {\n    super();\n    this._responses = MapWrapper.create();\n  }\n\n  get(url: string): Promise<string> {\n    var response = MapWrapper.get(this._responses, url);\n    if (isBlank(response)) {\n      return PromiseWrapper.reject('xhr error');\n    }\n\n    return PromiseWrapper.resolve(response);\n  }\n\n  reply(url: string, response: string) {\n    MapWrapper.set(this._responses, url, response);\n  }\n}\n\nclass SomeComponent {}\nclass SomeOtherComponent {}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}