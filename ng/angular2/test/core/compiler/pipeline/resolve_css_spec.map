{"version":3,"sources":["resolve_css_spec.js","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/test/core/compiler/pipeline/resolve_css_spec.js","sourceRoot":"d:/work/gitrepos/gh/pkozlowski-opensource/angular/modules/angular2/test/core/compiler/pipeline/","sourcesContent":["import {\n  describe,\n  beforeEach,\n  expect,\n  it,\n  iit,\n  ddescribe,\n  el,\n  SpyObject,\n  proxy,\n} from 'angular2/test_lib';\n\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {ResolveCss} from 'angular2/src/core/compiler/pipeline/resolve_css';\nimport {CompileElement} from 'angular2/src/core/compiler/pipeline/compile_element';\nimport {CompileStep} from 'angular2/src/core/compiler/pipeline/compile_step';\nimport {CompileControl} from 'angular2/src/core/compiler/pipeline/compile_control';\n\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {DirectiveMetadata} from 'angular2/src/core/compiler/directive_metadata';\nimport {ShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {ProtoView} from 'angular2/src/core/compiler/view';\n\nimport {IMPLEMENTS, Type, stringify} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/facade/dom';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\n\nexport function main() {\n  describe('ResolveCss', () => {\n    function createPipeline(strategy:ShadowDomStrategy) {\n      var annotation = new Component({selector: 'selector'});\n      var meta = new DirectiveMetadata(SomeComponent, annotation);\n      var resolveCss = new ResolveCss(meta, strategy, 'http://base');\n      return new CompilePipeline([\n        new MockStep((parent, current, control) => {\n          current.inheritedProtoView = new ProtoView(null, null, null);\n        }),\n        resolveCss\n      ]);\n    }\n\n    it('it should set ignoreBindings to true for style elements', () => {\n      var strategy = new DummyStrategy();\n      strategy.spy('transformStyleText').andCallFake((a, b, c) => '.css {}');\n      strategy.spy('handleStyleElement');\n\n      var pipeline = createPipeline(strategy);\n      var results = pipeline.process(el('<div><style></style></div>'));\n      expect(results[0].ignoreBindings).toBe(false);\n      expect(results[1].ignoreBindings).toBe(true);\n    });\n\n    it('should delegate the handling of style elements to the strategy', () => {\n      var strategy = new DummyStrategy();\n      strategy.spy('transformStyleText').andCallFake((a, b, c) => '.css {}');\n      strategy.spy('handleStyleElement');\n\n      var pipeline = createPipeline(strategy);\n      var template = el('<div></div>');\n      var styleEl = el('<style></style>');\n      DOM.appendChild(template, styleEl);\n\n      pipeline.process(template);\n\n      expect(strategy.spy('handleStyleElement')).toHaveBeenCalledWith(styleEl);\n    });\n\n    it('should handle css transformed synchronously', () => {\n      var strategy = new DummyStrategy();\n      strategy.spy('transformStyleText').andCallFake((css, url, cmp) => {\n        return `${css}, ${url}, ${stringify(cmp)}`;\n      });\n      strategy.spy('handleStyleElement');\n\n      var pipeline = createPipeline(strategy);\n      var template = el('<div></div>');\n      var styleEl = el('<style>/*css*/</style>');\n      DOM.appendChild(template, styleEl);\n\n      var results = pipeline.process(template);\n      expect(styleEl).toHaveText('/*css*/, http://base, SomeComponent');\n      expect(results[0].inheritedProtoView.stylePromises.length).toBe(0);\n    });\n\n    it('should handle css transformed asynchronously', (done) => {\n      var completer = PromiseWrapper.completer();\n      var strategy = new DummyStrategy();\n      var futureCss;\n      strategy.spy('transformStyleText').andCallFake((css, url, cmp) => {\n        futureCss = `${css}, ${url}, ${stringify(cmp)}`;\n        return completer.promise;\n      });\n      strategy.spy('handleStyleElement');\n\n      var pipeline = createPipeline(strategy);\n      var template = el('<div></div>');\n      var styleEl = el('<style>/*css*/</style>');\n      DOM.appendChild(template, styleEl);\n\n      var results = pipeline.process(template);\n\n      // The css should be empty before the style promise is resolved\n      expect(styleEl).toHaveText('');\n      expect(results[0].inheritedProtoView.stylePromises[0]).toBe(completer.promise);\n\n      completer.resolve(futureCss);\n\n      // TODO(vicb): refactor once we have better support for async tests\n      completer.promise.then((_) => {\n        expect(styleEl).toHaveText('/*css*/, http://base, SomeComponent');\n        done();\n      });\n    });\n  });\n}\n\n@proxy\n@IMPLEMENTS(ShadowDomStrategy)\nclass DummyStrategy extends SpyObject {\n  noSuchMethod(m) {\n    return super.noSuchMethod(m)\n  }\n}\n\nclass SomeComponent {}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}